<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
const int MAX_STEP = 9;
typedef int[0, MAX_STEP-1] step_t;
const step_t STEPS = 8;
const step_t FIRST_STEPS = 0;
const step_t HOST_1 = 0;
const step_t HOST_2 = 1;
const step_t HOST = 2;
const step_t TYPE = 0;
const step_t ID = 1;
typedef int[0, 5] cons_prov;
const step_t LOCALHOST = 0;
const step_t AGENT_ORCH = 0;
const step_t URI1 = 0;
const step_t URI2 = 3;
const step_t URI3 = 7;

struct
{
  step_t id;
  step_t type;
} step_s;

chan uri[MAX_STEP][MAX_STEP], callback[MAX_STEP][MAX_STEP], in[MAX_STEP][MAX_STEP], out[MAX_STEP][MAX_STEP]
	,activateExchange[MAX_STEP][MAX_STEP][MAX_STEP],activateEip[MAX_STEP][MAX_STEP][MAX_STEP][MAX_STEP][MAX_STEP]
	,repoPut[MAX_STEP][MAX_STEP],repoGet[MAX_STEP][MAX_STEP],http[MAX_STEP][MAX_STEP],install[MAX_STEP][MAX_STEP],status[MAX_STEP]
	,activate[MAX_STEP][MAX_STEP],administrate[MAX_STEP][MAX_STEP];

		const step_t HOST_ID = 0;
		const step_t TO = 1;
		const step_t FROM = 2;
		const step_t PROCESS = 3;
		const step_t AGREGATE = 4;
		const step_t INOUT = 5;
		const step_t INONLY = 6;
		const step_t TRANSFORM = 7;		
		const step_t SPLIT = 8;

</declaration><template><name x="5" y="5">Repository</name><declaration>// Place local declarations here.
step_t replica[STEPS];
step_t current = 0;
step_t bundleId;
step_t httpId;</declaration><location id="id0" x="-800" y="-224"><name x="-810" y="-254">Getting</name></location><location id="id1" x="-616" y="-320"><name x="-626" y="-350">EndOp</name></location><location id="id2" x="-800" y="-400"><name x="-810" y="-430">Setting</name></location><location id="id3" x="-960" y="-320"><name x="-970" y="-350">Ready</name></location><init ref="id3"/><transition><source ref="id0"/><target ref="id1"/><label kind="synchronisation" x="-712" y="-264">http[httpId][replica[bundleId]]?</label></transition><transition><source ref="id3"/><target ref="id0"/><label kind="select" x="-976" y="-288">id : step_t,
val : step_t</label><label kind="synchronisation" x="-976" y="-256">repoGet[id][val]!</label><label kind="assignment" x="-976" y="-240">bundleId = id,
httpId = val</label></transition><transition><source ref="id1"/><target ref="id3"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="synchronisation" x="-728" y="-408">http[httpId][current]?</label><label kind="assignment" x="-728" y="-392">replica[current++] = bundleId</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-984" y="-448">id : step_t,
val : step_t</label><label kind="synchronisation" x="-984" y="-416">repoPut[val][id]!</label><label kind="assignment" x="-984" y="-400">bundleId = val,
httpId = id</label></transition></template><template><name>RouteActivator</name><parameter>step_t&amp;  steps[2][step_t][3]</parameter><declaration>step_t i =0;
step_t orchId;
step_t hostId;
step_t lastFrom = 0;

step_t type(){
	return steps[orchId][i][TYPE];
}

step_t id(){
	return steps[orchId][i][ID];
}

void updateLast(){
	if(type()==FROM){
		lastFrom = steps[orchId][i][ID];
	}
}

step_t nextType(){
	if(i==STEPS){
		return TO;
	}
	else{
		return steps[orchId][i+1][TYPE];
	}
}

step_t nextId(){
	return steps[orchId][i+1][ID];
}

step_t firstId(){
	return lastFrom;//steps[orchId][FIRST_STEPS][ID];
}

step_t host(){
	if(type()==TO){
		return steps[orchId][i][HOST];
	}
	else{
		return hostId;
	}

}
</declaration><location id="id4" x="-536" y="32"><name x="-584" y="-8">ConnectingOut</name><committed/></location><location id="id5" x="-624" y="-88"><name x="-634" y="-118">Idle</name><urgent/></location><location id="id6" x="-344" y="32"><name x="-328" y="16">LastStep</name><committed/></location><location id="id7" x="-408" y="-232"><name x="-418" y="-262">Activating</name><committed/></location><location id="id8" x="-200" y="-40"><name x="-176" y="-48">NextStep</name><committed/></location><location id="id9" x="-408" y="-88"><name x="-418" y="-118">Ready</name><committed/></location><init ref="id5"/><transition><source ref="id8"/><target ref="id7"/><label kind="guard" x="-304" y="-264">nextType() == FROM</label><label kind="synchronisation" x="-272" y="-248">activateExchange[i][firstId()][hostId]?</label><nail x="-32" y="-216"/></transition><transition><source ref="id4"/><target ref="id5"/><label kind="guard" x="-688" y="-64">i==STEPS</label><label kind="synchronisation" x="-688" y="-48">activateEip[type()][id()][i][hostId][host()]?</label><label kind="assignment" x="-688" y="-32">i=0,
lastFrom = 0</label></transition><transition><source ref="id5"/><target ref="id9"/><label kind="select" x="-584" y="-176">oId : step_t,
hId : step_t</label><label kind="synchronisation" x="-584" y="-144">activate[oId][hId]!</label><label kind="assignment" x="-584" y="-128">orchId = oId,
hostId = hId</label></transition><transition><source ref="id6"/><target ref="id4"/><label kind="synchronisation" x="-544" y="48">activateExchange[i][firstId()][hostId]?</label></transition><transition><source ref="id9"/><target ref="id6"/><label kind="guard" x="-440" y="-24">i==STEPS</label></transition><transition><source ref="id7"/><target ref="id9"/><label kind="synchronisation" x="-664" y="-224">activateEip[type()][id()][i][hostId][host()]?</label><label kind="assignment" x="-664" y="-208">i++</label></transition><transition><source ref="id8"/><target ref="id7"/><label kind="guard" x="-328" y="-184">nextType() != FROM</label><label kind="synchronisation" x="-376" y="-168">activateExchange[i][nextId()][hostId]?</label></transition><transition><source ref="id9"/><target ref="id8"/><label kind="guard" x="-368" y="-64">i&lt;STEPS</label><label kind="assignment" x="-360" y="-48">updateLast()</label></transition></template><template><name>Exchange</name><parameter>step_t exchangeIn, step_t exchangeOut,step_t hostId</parameter><location id="id10" x="-1312" y="-104"><name x="-1322" y="-134">Idle</name></location><location id="id11" x="-752" y="-104"><name x="-762" y="-134">Processing</name></location><location id="id12" x="-928" y="-104"><name x="-938" y="-134">Ready</name></location><init ref="id10"/><transition><source ref="id10"/><target ref="id12"/><label kind="synchronisation" x="-1288" y="-128">activateExchange[exchangeIn][exchangeOut][hostId]!</label></transition><transition><source ref="id11"/><target ref="id12"/><label kind="synchronisation" x="-904" y="-48">in[exchangeOut][hostId]?</label><nail x="-848" y="-48"/></transition><transition><source ref="id12"/><target ref="id11"/><label kind="synchronisation" x="-896" y="-184">out[exchangeIn][hostId]!</label><nail x="-848" y="-160"/></transition></template><template><name>Consumer</name><parameter>cons_prov count</parameter><declaration>step_t exchangeId;
step_t clientId;
step_t hostLocalId;
step_t hostRemoteId;</declaration><location id="id13" x="-592" y="-56"><name x="-602" y="-86">Idle</name><urgent/></location><location id="id14" x="-216" y="-24"><name x="-226" y="-54">Replaying</name></location><location id="id15" x="-48" y="-56"><name x="-58" y="-86">Processing</name></location><location id="id16" x="-216" y="-88"><name x="-226" y="-118">Consuming</name></location><location id="id17" x="-384" y="-56"><name x="-394" y="-86">Ready</name><urgent/></location><init ref="id13"/><transition><source ref="id13"/><target ref="id17"/><label kind="select" x="-544" y="-56">eId : step_t,
cId : step_t,
lhId : step_t,
rhId : step_t</label><label kind="synchronisation" x="-600" y="8">activateEip[FROM][cId][eId][lhId][rhId]!</label><label kind="assignment" x="-544" y="32">clientId = cId,
exchangeId = eId,
hostLocalId = lhId,
hostRemoteId = rhId</label></transition><transition><source ref="id14"/><target ref="id17"/><label kind="synchronisation" x="-360" y="8">callback[hostLocalId][clientId]?</label><nail x="-304" y="8"/></transition><transition><source ref="id15"/><target ref="id14"/><label kind="synchronisation" x="-160" y="8">in[exchangeId][hostLocalId]!</label><nail x="-144" y="8"/></transition><transition><source ref="id16"/><target ref="id15"/><label kind="synchronisation" x="-168" y="-152">out[exchangeId][hostLocalId]?</label><nail x="-136" y="-120"/></transition><transition><source ref="id17"/><target ref="id16"/><label kind="synchronisation" x="-352" y="-144">uri[hostLocalId][clientId]!</label><nail x="-304" y="-120"/></transition></template><template><name>Client</name><parameter>step_t id, step_t host</parameter><location id="id18" x="-272" y="-392"><name x="-282" y="-422">Invoking</name></location><location id="id19" x="-424" y="-392"><name x="-434" y="-422">Ready</name></location><init ref="id19"/><transition><source ref="id18"/><target ref="id19"/><label kind="synchronisation" x="-392" y="-328">callback[host][id]!</label><nail x="-360" y="-328"/></transition><transition><source ref="id19"/><target ref="id18"/><label kind="synchronisation" x="-368" y="-480">uri[host][id]?</label><nail x="-360" y="-456"/></transition></template><template><name>Service</name><parameter>step_t id, step_t host</parameter><location id="id20" x="-112" y="-8"><name x="-122" y="-38">Processing</name></location><location id="id21" x="-288" y="-8"><name x="-298" y="-38">Ready</name></location><init ref="id21"/><transition><source ref="id20"/><target ref="id21"/><label kind="synchronisation" x="-248" y="80">callback[host][id]?</label><nail x="-208" y="72"/></transition><transition><source ref="id21"/><target ref="id20"/><label kind="synchronisation" x="-224" y="-136">uri[host][id]!</label><nail x="-200" y="-96"/></transition></template><template><name>Provider</name><parameter>cons_prov count</parameter><declaration>step_t exchangeId;
step_t serviceId;
step_t hostLocalId;
step_t hostRemoteId;</declaration><location id="id22" x="-424" y="0"><name x="-434" y="-30">Idle</name><urgent/></location><location id="id23" x="-80" y="24"><name x="-90" y="-6">Replaying</name></location><location id="id24" x="88" y="0"><name x="78" y="-30">Processing</name></location><location id="id25" x="-80" y="-24"><name x="-90" y="-54">Providing</name></location><location id="id26" x="-256" y="0"><name x="-266" y="-30">Ready</name><urgent/></location><init ref="id22"/><transition><source ref="id22"/><target ref="id26"/><label kind="select" x="-416" y="8">sId : step_t,
eId : step_t,
lhId : step_t,
rhId : step_t</label><label kind="synchronisation" x="-424" y="72">activateEip[TO][sId][eId][lhId][rhId]!</label><label kind="assignment" x="-424" y="88">serviceId = sId,
exchangeId = eId,
hostLocalId = lhId,
hostRemoteId = rhId</label></transition><transition><source ref="id23"/><target ref="id26"/><label kind="synchronisation" x="-216" y="56">out[exchangeId][hostLocalId]?</label><nail x="-176" y="56"/></transition><transition><source ref="id24"/><target ref="id23"/><label kind="synchronisation" x="-24" y="56">callback[hostRemoteId][serviceId]!</label><nail x="8" y="56"/></transition><transition><source ref="id25"/><target ref="id24"/><label kind="synchronisation" x="-8" y="-88">uri[hostRemoteId][serviceId]?</label><nail x="8" y="-64"/></transition><transition><source ref="id26"/><target ref="id25"/><label kind="synchronisation" x="-224" y="-88">in[exchangeId][hostLocalId]!</label><nail x="-176" y="-64"/></transition></template><template><name>EipProcesseur</name><parameter>step_t exchangeId, step_t host</parameter><declaration>step_t type;
step_t hostLocalId;
step_t hostRemoteId;</declaration><location id="id27" x="-624" y="-40"><name x="-634" y="-70">Idle</name></location><location id="id28" x="56" y="-40"><name x="46" y="-70">End</name></location><location id="id29" x="-152" y="-40"><name x="-162" y="-70">Tau</name></location><location id="id30" x="-368" y="-40"><name x="-378" y="-70">Ready</name></location><init ref="id27"/><transition><source ref="id27"/><target ref="id30"/><label kind="select" x="-592" y="-184">tId : step_t,
eId : step_t,
lhId : step_t,
rhId : step_t</label><label kind="guard" x="-592" y="-120">tId!=FROM and tId!=TO</label><label kind="synchronisation" x="-592" y="-104">activateEip[tId][eId][exchangeId][lhId][rhId]!</label><label kind="assignment" x="-592" y="-88">type = tId,
hostLocalId = lhId,
hostRemoteId = rhId</label></transition><transition><source ref="id28"/><target ref="id30"/><nail x="-192" y="48"/></transition><transition><source ref="id29"/><target ref="id28"/><label kind="synchronisation" x="-144" y="-64">out[exchangeId][hostLocalId]?</label></transition><transition><source ref="id30"/><target ref="id29"/><label kind="synchronisation" x="-336" y="-64">in[exchangeId][hostLocalId]!</label></transition></template><template><name>Runtime</name><declaration>step_t bundleId;
step_t orchId;
step_t hostId;</declaration><location id="id31" x="-1072" y="-48"><name x="-1104" y="-80">Activating</name></location><location id="id32" x="-1248" y="-48"><name x="-1258" y="-78">Pulled</name></location><location id="id33" x="-864" y="-48"><name x="-874" y="-78">Activated</name></location><location id="id34" x="-1472" y="-48"><name x="-1504" y="-80">Installing</name></location><location id="id35" x="-1640" y="-48"><name x="-1650" y="-78">Ready</name></location><init ref="id35"/><transition><source ref="id34"/><target ref="id32"/><label kind="synchronisation" x="-1448" y="-72">repoGet[bundleId][bundleId]?</label></transition><transition><source ref="id32"/><target ref="id31"/><label kind="select" x="-1216" y="-112">id : step_t</label><label kind="synchronisation" x="-1216" y="-96">http[bundleId][id]!</label><label kind="assignment" x="-1216" y="-80">orchId = id</label></transition><transition><source ref="id33"/><target ref="id35"/><label kind="synchronisation" x="-1320" y="16">status[bundleId]?</label><nail x="-1272" y="72"/></transition><transition><source ref="id31"/><target ref="id33"/><label kind="synchronisation" x="-1040" y="-72">activate[orchId][hostId]?</label></transition><transition><source ref="id35"/><target ref="id34"/><label kind="select" x="-1592" y="-136">bId : step_t,
hId : step_t</label><label kind="synchronisation" x="-1592" y="-104">install[bId][hId]!</label><label kind="assignment" x="-1592" y="-88">bundleId = bId,
hostId = hId</label></transition></template><template><name>AgentHost</name><parameter>step_t id, step_t hostId, step_t bundleId</parameter><declaration>bool installed = false;</declaration><location id="id36" x="-160" y="-16"></location><location id="id37" x="-320" y="48"><name x="-330" y="18">Installed</name></location><location id="id38" x="-320" y="-80"><name x="-330" y="-110">installing</name></location><location id="id39" x="-464" y="-16"><name x="-474" y="-46">Ready</name></location><init ref="id39"/><transition><source ref="id38"/><target ref="id37"/><label kind="guard" x="-380" y="-46">installed</label></transition><transition><source ref="id36"/><target ref="id37"/><label kind="synchronisation" x="-240" y="16">status[bundleId]!</label></transition><transition><source ref="id37"/><target ref="id39"/><label kind="synchronisation" x="-488" y="24">callback[hostId][id]?</label></transition><transition><source ref="id38"/><target ref="id36"/><label kind="guard" x="-260" y="-86">!installed</label><label kind="synchronisation" x="-256" y="-72">install[bundleId][hostId]?</label><label kind="assignment" x="-224" y="-56">installed = true</label></transition><transition><source ref="id39"/><target ref="id38"/><label kind="synchronisation" x="-464" y="-80">uri[hostId][id]!</label></transition></template><template><name>Installer</name><declaration>step_t bundleId;
step_t hostId;</declaration><location id="id40" x="-1360" y="-40"><name x="-1370" y="-70">Ready</name><urgent/></location><location id="id41" x="-544" y="-40"><name x="-554" y="-70">Installed</name></location><location id="id42" x="-728" y="-40"><name x="-760" y="-72">idRetrived</name></location><location id="id43" x="-896" y="-40"><name x="-920" y="-72">Pushed</name></location><location id="id44" x="-1120" y="-40"><name x="-1130" y="-70">installing</name></location><init ref="id40"/><transition><source ref="id40"/><target ref="id44"/><label kind="select" x="-1304" y="-120">bId : step_t,
hId : step_t</label><label kind="synchronisation" x="-1312" y="-88">administrate[bId][hId]!</label><label kind="assignment" x="-1304" y="-72">bundleId = bId,
hostId = hId</label></transition><transition><source ref="id41"/><target ref="id40"/><label kind="synchronisation" x="-1008" y="56">status[bundleId]!</label><nail x="-960" y="112"/></transition><transition><source ref="id42"/><target ref="id41"/><label kind="synchronisation" x="-688" y="-64">install[bundleId][hostId]?</label></transition><transition><source ref="id43"/><target ref="id42"/><label kind="select" x="-856" y="-96">id : step_t</label><label kind="synchronisation" x="-856" y="-80">http[bundleId][id]!</label><label kind="assignment" x="-856" y="-64">bundleId = id</label></transition><transition><source ref="id44"/><target ref="id43"/><label kind="synchronisation" x="-1088" y="-64">repoPut[bundleId][bundleId]?</label></transition></template><template><name>Admin</name><parameter>step_t id, step_t hostId</parameter><location id="id45" x="-576" y="-8"><name x="-586" y="-38">End</name></location><location id="id46" x="-848" y="-8"><name x="-858" y="-38">Idle</name></location><init ref="id46"/><transition><source ref="id46"/><target ref="id45"/><label kind="synchronisation" x="-784" y="-32">administrate[id][hostId]?</label></transition></template><system>// Place template instantiations here.

step_t tab[2][step_t][3] = {
	{
		{FROM,URI1,LOCALHOST},
		{AGREGATE,1,LOCALHOST},
		{PROCESS,2,LOCALHOST},
		{TO,URI2,HOST_2},
		{TO,4,HOST_2},
		{FROM,4,LOCALHOST},
		{PROCESS,5,LOCALHOST},
		{SPLIT,6,LOCALHOST},
		{TO,URI3,HOST_2}
	},
	{{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}}
};

client = Client(URI1,HOST_1);
service = Service(URI3,HOST_2);
runtime = Runtime();
repo = Repository();
installer  = Installer();
activator = RouteActivator(tab);
agency = AgentHost(URI2,HOST_2,AGENT_ORCH);
admin = Admin(AGENT_ORCH,HOST_1);
// List one or more processes to be composed into a system.
system admin,installer,runtime,repo,activator,client,service,agency,Consumer,Provider, Exchange, EipProcesseur;

/*


consumer1 = Consumer();
consumer2 = Consumer();
provider1 = Provider();
provider2 = Provider();


agregator1 = EipProcesseur(AGREGATE);
processor1 = EipProcesseur(PROCESS);
processor2 = EipProcesseur(PROCESS);
spliter1 = EipProcesseur(SPLIT);
agregator1,processor1,processor2,spliter1,

e1 = Exchange(FROM,AGREGATE);
e2 = Exchange(AGREGATE,PROCESS);
e3 = Exchange(PROCESS,SPLIT);
e4 = Exchange(SPLIT,TO);
e5 = Exchange(TO,FROM);
system client,consumer,e1,eip1,e2,eip2,e3,eip3,e4,provider,e5,service;

*/</system></nta>